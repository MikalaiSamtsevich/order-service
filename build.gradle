plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.example'
version = '0.0.6-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    agent
}

repositories {
    mavenCentral()
}

dependencies {
    agent "io.opentelemetry.javaagent:opentelemetry-javaagent:1.32.0"
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.flywaydb:flyway-core:10.17.2'
    runtimeOnly 'org.flywaydb:flyway-database-postgresql:10.15.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

task copyAgent(type: Copy) {
    from configurations.agent {
        rename "opentelemetry-javaagent-.*\\.jar", "opentelemetry-javaagent.jar"
    }
    into layout.buildDirectory.dir("agent")
}

bootJar {
    dependsOn copyAgent
    archiveFileName = "app.jar"
}

jib {
//    from.image = "amazoncorretto:17.0.9-alpine"

    extraDirectories {
        paths {
            path {
                from = layout.buildDirectory.dir("agent")
                into = '/otelagent'
            }
        }
    }
    container {
        jvmFlags = [
                '-javaagent:/otelagent/opentelemetry-javaagent.jar'
        ]
    }
}

tasks.named('jibDockerBuild').configure{
    dependsOn copyAgent
}